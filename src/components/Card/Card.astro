---
import Svg from "@cxa/astro-inline-svg";
import { Icon } from "astro-icon/components";

import "../../styles/global.css";
import { generateQRCode } from "../../libs/qrcode.ts";

export type Props = { url: URL };
const { url } = Astro.props;

const qrCode: string = await generateQRCode(url.href);
---

<button id="card" type="button" aria-label="Share your card">
  <Svg id="qr" raw={qrCode} />
  <div>
    <Icon class="icon" id="idcard" name="mingcute:idcard-line" />
    <Icon
      class="icon"
      id="check"
      name="mingcute:checkbox-line"
      display="none"
    />
    <span aria-hidden="true">{url.hostname}</span>
  </div>
</button>

<style>
  button {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 0.3rem;
    background: none;
    border: none;
    cursor: pointer;

    &:hover div,
    &:focus-visible div {
      border-color: color-mix(in srgb, var(--foreground) 60%, transparent);
    }
  }

  #qr {
    path {
      stroke: var(--foreground);
    }
    width: 6rem;
    height: auto;
  }

  div {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.3rem;
    padding: 0 0.3rem;
    color: var(--foreground);
    border-bottom: 2px solid
      color-mix(in srgb, var(--foreground) 30%, transparent);
    transition: border-color 0.3s ease-in-out;
  }

  .icon {
    width: 1rem;
    height: auto;
  }

  span {
    font-family: "LINE Seed JP", sans-serif;
    font-size: 0.75rem;
    font-style: normal;
    font-weight: normal;
    line-height: normal;
  }
</style>

<script is:inline>
  const shareData = {
    title: document.title,
    text: document.head.querySelector('[name="description"]').content,
    url: location.href,
  };

  document.getElementById("card").addEventListener("click", async () => {
    if (
      /iPhone|iPad|Android/i.test(navigator.userAgent) &&
      navigator.canShare(shareData)
    ) {
      try {
        await navigator.share(shareData);
      } catch (error) {
        if (error.name !== "AbortError") console.error("Error sharing:", error);
      }
    } else {
      await navigator.clipboard.writeText(shareData.url);
      const [cardIcon, checkIcon] = [
        document.getElementById("idcard"),
        document.getElementById("check"),
      ];
      [cardIcon.style.display, checkIcon.style.display] = ["none", "block"];
      setTimeout(() => {
        [cardIcon.style.display, checkIcon.style.display] = ["block", "none"];
      }, 1000);
    }
  });
</script>
