name: üöÄ Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  tagpr:
    name: üè∑Ô∏è Release a New Version
    permissions:
      contents: write
      pull-requests: write
    runs-on: Ubuntu-Latest
    outputs:
      tag: ${{ steps.tagpr.outputs.tag }}

    steps:
      - name: üöö Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: üè∑Ô∏è Release a New Version
        id: tagpr
        uses: Songmu/tagpr@3dca11e7c0d68637ee212ddd35acc3d30a7403a4 # v1.5.0
        with:
          config: .github/tagpr.ini
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: üöÄ Deploy to the Production
    permissions:
      contents: read
      deployments: write
    needs: tagpr
    if: ${{ needs.tagpr.outputs.tag != '' }}
    runs-on: Ubuntu-Latest

    steps:
      - name: üöö Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: üçû Setup Bun with Cache
        uses: 5ouma/utils/setup-bun-with-cache@5cf2aaa5831848c6af623912f745fc05890a6aa1 # main

      - name: üëæ Create a Meta File
        run: echo '${{ vars.META_FILE }}' >meta.json

      - name: üõ†Ô∏è Build
        run: bun run build

      - name: ‚õÖÔ∏è Deploy to the Production
        uses: cloudflare/wrangler-action@6d58852c35a27e6034745c5d0bc373d739014f7f # v3.13.0
        with:
          command: pages deploy dist --project-name='${{ github.event.repository.name }}'
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
