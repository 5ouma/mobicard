name: 🔍 Preview

on:
  pull_request:
    paths:
      - "**.astro"
      - "**.ts"
      - bun.lock
      - "!**.test.ts"

permissions: {}

jobs:
  deploy:
    name: 🚀 Deploy to the Preview
    permissions:
      contents: read
      deployments: write
    runs-on: Ubuntu-Latest
    timeout-minutes: 1
    outputs:
      url: ${{ steps.deploy.outputs.deployment-url }}

    steps:
      - name: 🚚 Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: 🍞 Setup Bun with Cache
        uses: 5ouma/utils/setup-bun-with-cache@5d4d9189866ac7eb6c2d0534cf535f3f1f571cff # v0.1.4

      - name: 👾 Create a Meta File
        env:
          META_TEST_FILE: ${{ vars.META_TEST_FILE }}
        run: echo "$META_TEST_FILE" >meta.json

      - name: 🛠️ Build
        run: bun run build

      - name: ⛅️ Deploy to the Preview
        id: deploy
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3.14.1
        with:
          command: pages deploy dist --project-name='${{ github.event.repository.name }}'
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  lighthouse:
    name: 🔦 Analyze Performance
    permissions:
      pull-requests: write
    needs: deploy
    runs-on: Ubuntu-Latest
    timeout-minutes: 2

    steps:
      - name: 🔦 Analyze Performance with Lighthouse
        id: lighthouse
        uses: treosh/lighthouse-ci-action@2f8dda6cf4de7d73b29853c3f29e73a01e297bd8 # 12.1.0
        with:
          urls: ${{ needs.deploy.outputs.url }}
          runs: 3

      - name: 📊 Arrange the Summary
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: summary
        with:
          result-encoding: string
          script: |
            const manifest = JSON.parse(process.env.MANIFEST);
            const summary = manifest.reduce((sum, { summary }) => {
              for (const label in summary) sum[label] = (sum[label] || 0) + summary[label];
              return sum;
            }, {});
            const gauge = Object.entries(summary).map(([label, percentage]) => {
              const score = Math.round(percentage / manifest.length * 100);
              const icon = score >= 90 ? "🟢" : score >= 50 ? "🟧" : "🔺";
              return { label, score: `${icon} ${score}` };
            });
            const labels = `| ${gauge.map(({ label }) => label).join(" | ")} |`;
            const scores = `| ${gauge.map(({ score }) => score).join(" | ")} |`;
            return `${labels}\n| ${gauge.map(() => ":-:").join(" | ")} |\n${scores}`;
        env:
          MANIFEST: ${{ steps.lighthouse.outputs.manifest }}

      - name: 💬 Comment the Result
        uses: mshick/add-pr-comment@b8f338c590a895d50bcbfa6c5859251edc8952fc # v2.8.2
        with:
          message: |
            ## 🔦 Lighthouse Result

            ${{ steps.summary.outputs.result }}

            <details><summary>📊 Score Scale</summary>

            |  Fail   | Average  |   Pass    |
            | :-----: | :------: | :-------: |
            | 🔺 0-49 | 🟧 50-89 | 🟢 90-100 |

            </details>
          message-id: lighthouse
